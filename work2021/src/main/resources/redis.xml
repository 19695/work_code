<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="redisSentinelConfiguration" class="org.springframework.data.redis.connection.RedisSentinelConfiguration">
        <constructor-arg name="propertySource" ref="envPropertySource" />
    </bean>

    <bean id="envPropertySource" class="org.springframework.core.io.support.ResourcePropertySource">
        <constructor-arg name="location" value="classpath:redis-${spring.profiles.active}.properties" />
    </bean>

    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="50" />
        <property name="maxWaitMillis" value="30000" />
        <property name="testWhileIdle" value="true" />
        <!-- 检查池中空闲连接，将空闲时间超过 minEvictableIdleTimeMillis 的连接断开，直到连接数为 minIdle 为止 -->
        <property name="timeBetweenEvictionRunsMillis" value="1000" />
        <property name="minEvictableIdleTimeMillis" value="1000" />
    </bean>

    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <constructor-arg name="sentinelConfig" ref="redisSentinelConfiguration" />
        <constructor-arg name="poolConfig" ref="jedisPoolConfig" />
        <property name="password" value="${spring.redis.password}" />
    </bean>

    <bean id="cacheRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory" />
    </bean>

    <!-- demo -->
    <bean id="demoRedisImp" class="org.colm.code.redis.DemoRedisImp">
        <constructor-arg name="redisTemplate" ref="cacheRedisTemplate" />
    </bean>

</beans>